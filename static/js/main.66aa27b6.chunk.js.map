{"version":3,"sources":["Components/Form.js","logo.svg","Views/LoginView.js","Models/UserContext.js","Components/UserAccount.js","icons/logo-white.svg","icons/home-icon.svg","Components/Navigation.js","Models/UserClass.js","Models/BoardClass.js","Models/ListClass.js","Models/CardClass.js","API/api.js","icons/recent-icon-dark.svg","icons/member-icon-dark.svg","Views/DashboardView.js","icons/delete-icon.svg","Components/Delete.js","icons/cancel-icon.svg","icons/description-icon.svg","Components/Description.js","icons/title-icon.svg","Components/Title.js","Components/Card.js","Components/Add.js","Components/List.js","Views/BoardView.js","Views/NoMatch.js","App.js","index.js"],"names":["Form","props","className","onSubmit","event","preventDefault","elem","target","username","value","password","checkUserCredentials","type","placeholder","LoginView","useEffect","document","title","src","logo","alt","UserContext","createContext","currentUser","isLoggedIn","setIsLoggedIn","UserAccount","firstInitial","user","email","slice","useState","isOpen","setIsOpen","closeMenu","name","window","addEventListener","removeEventListener","onClick","toUpperCase","to","setLogOut","Navigation","useContext","isDashboard","useRouteMatch","url","includes","data-action","home","UserClass","uid","boardIds","this","BoardClass","ownerId","listIds","memberIds","ListClass","cardIds","CardClass","description","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","userConverter","toFirestore","console","log","fromFirestore","snapshot","options","data","ref","id","boardConverter","board","listConverter","list","cardConverter","card","api","db","firestore","getUser","a","collection","doc","withConverter","get","exists","Error","authenticateAndGetUser","auth","signInWithEmailAndPassword","response","errorCode","code","errorMessage","message","getBoard","getList","getCard","getBoardsByUserId","userId","boardPromises","map","length","Promise","all","getListsByBoardId","boardId","listPromises","getCardsByListId","listId","cardPromises","updateBoard","boardRef","update","FieldValue","arrayUnion","removeFromBoard","arrayRemove","removeFromList","cardId","listRef","addList","add","docRef","addedList","deleteList","delete","updateList","addCard","addedCard","deleteCard","cardRef","updateCard","key","DashboardView","isLoading","setIsLoading","remote","ownedBoards","setOwnedBoards","sharedBoards","setSharedBoards","initBoards","filter","ownedBoardsLinks","sharedBoardsLinks","recent","member","Delete","appearance","e","icon","Description","isActive","setIsActive","text","setText","clickToCancel","dataset","action","autoFocus","onChange","content","showTextarea","cancel","showControls","Title","rows","onBlur","parentList","Card","clickToClose","handleClick","Add","source","List","cards","setCards","initCards","refreshWithNewCard","input","newCard","refreshWithUpdatedCard","cardsCopy","isCard","indexOfMatch","findIndex","undefined","splice","cardDisplay","BoardView","lists","setLists","match","initLists","refreshLists","newList","params","copyOfLists","isList","listDisplay","boardName","NoMatch","App","userDefaults","setUser","Provider","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66aa27b6.chunk.js","sourcesContent":["import './Form.css'\n\nexport const Form = function(props) {\n    return (\n        <div className=\"Form\">\n            <h1>Log in to Ello</h1>\n            <form onSubmit={(event) => {\n                    event.preventDefault();\n                    const elem = event.target;\n                    const username = elem[0].value;\n                    const password = elem[1].value;\n                    props.checkUserCredentials(username, password)\n                }}>\n                <input type=\"text\" placeholder=\"username\"></input>\n                <input type=\"password\" placeholder=\"password\"></input>\n                <button type=\"submit\">Sign in</button>\n            </form>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo.e6046145.svg\";","import { useEffect } from 'react'\nimport { Form } from \"../Components/Form\"\nimport logo from '../logo.svg'\nimport './LoginView.css'\n\nexport const LoginView = function(props) {\n\n    useEffect(() => {\n        let title = `Login | Ello`\n        document.title = title;\n    },[])\n\n    return (\n        <div className=\"LoginView\">\n            <img src={logo} alt=\"Ello logo\"></img>\n            <Form\n            checkUserCredentials={props.checkUserCredentials} />\n        </div>\n    )\n}","import { createContext } from 'react';\n\nexport const UserContext = createContext({\n  currentUser: null,\n  isLoggedIn: false,\n  setIsLoggedIn: (isLoggedIn) => {\n    return !isLoggedIn\n  },\n});","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './UserAccount.css'\n\nexport const UserAccount = function(props) {\n    const email = props.user.currentUser.email;\n    const firstInitial = email.slice(0,1);\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const openMenu = function() {\n        setIsOpen(true)\n    }\n\n    const closeMenu = function() {\n        setIsOpen(false)\n    }\n\n    const name = isOpen ? \"open\":\"closed\"\n\n    useEffect(() => {\n        if (isOpen) {\n            window.addEventListener('click', closeMenu)\n        }\n        return function cleanUp() {\n            window.removeEventListener('click', closeMenu)\n        }\n    })\n\n    return (\n        <div className=\"UserAccount\">\n            <div className=\"userIcon\" onClick={openMenu}>\n                {firstInitial.toUpperCase()}\n            </div>\n            <div className={`menu ${name}`}>\n                <Link to=\"/login\" onClick={() => {props.user.setLogOut(props.user.isLoggedIn);}}>\n                    <div className=\"menuItem\">\n                        Log out\n                    </div>\n                </Link>\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo-white.49c8f8b0.svg\";","export default __webpack_public_path__ + \"static/media/home-icon.da235aea.svg\";","import { Link, useRouteMatch } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { UserContext } from '../Models/UserContext'\nimport { UserAccount } from './UserAccount'\nimport './Navigation.css'\nimport logo from '../icons/logo-white.svg'\nimport home from '../icons/home-icon.svg'\n\nexport const Navigation = function(props) {\n    const user = useContext(UserContext)\n    const match = useRouteMatch();\n    const isDashboard = match.url.includes('/boards')\n    //The data attribute in navigation ensures that click-to-close will\n    //work for an opened card.\n    return (\n        <nav className={isDashboard ? 'dash' : 'board'} data-action=\"closeCard\">\n            <Link className=\"buttonContainer\" to={`/${user.currentUser.username}/boards`}>\n                <button className=\"main\">\n                    <img src={home} alt=\"home icon\"></img>\n                </button>\n            </Link>\n            <Link className=\"logoContainer\" to=\"/\">\n                <img src={logo} alt=\"logo\"></img>\n            </Link>\n            <UserAccount user={user} />\n        </nav>\n    )\n}","export class UserClass {\n    constructor(email, uid, boardIds) {\n        this.email = email;\n        this.uid = uid;\n        this.boardIds = boardIds;\n    }\n}","export class BoardClass {\n    constructor(name, uid, ownerId, listIds, memberIds) {\n      this.name = name;\n      this.uid = uid;\n      this.ownerId = ownerId;\n      this.listIds = listIds;\n      this.memberIds = memberIds;\n    }\n  }","export class ListClass {\n    constructor(name, uid, cardIds) {\n        this.name = name;\n        this.uid = uid;\n        this.cardIds = cardIds;\n    }\n}","export class CardClass {\n    constructor(title, uid, description) {\n        this.title = title;\n        this.uid = uid;\n        this.description = description;\n    }\n}","import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\nimport { UserClass } from '../Models/UserClass'\nimport { BoardClass } from '../Models/BoardClass'\nimport { ListClass } from '../Models/ListClass'\nimport { CardClass } from '../Models/CardClass'\n\nconst firebaseConfig = {\n    apiKey: `${process.env.REACT_APP_APIKEY}`,\n    authDomain: `${process.env.REACT_APP_AUTHDOMAIN}`,\n    projectId: `${process.env.REACT_APP_PROJECTID}`,\n    storageBucket: `${process.env.REACT_APP_STORAGEBUCKET}`,\n    messagingSenderId: `${process.env.REACT_APP_MESSENGINGSENDERID}`,\n    appId: `${process.env.REACT_APP_APPID}`\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst userConverter = {\n    toFirestore: function(user) {\n        console.log('toFirestore called with ', user)\n        return {\n            email: user.email,\n            boardIds: user.boardIds\n            };\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new UserClass(data.email, uid, data.boardIds);\n    }\n}\n\nconst boardConverter = {\n    toFirestore: function(board) {\n        console.log('toFirestore called with ', board)\n        return {\n            name: board.name,\n            ownerId: board.ownerId,\n            listIds: board.listIds,\n            memberIds: board.memberIds\n        };\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new BoardClass(data.name, uid, data.ownerId, data.listIds, data.memberIds)\n    }\n}\n\nconst listConverter = {\n    toFirestore: function(list) {\n        console.log('toFirestore called with ', list)\n        return {\n            name: list.name,\n            cardIds: list.cardIds\n        }\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new ListClass(data.name, uid, data.cardIds)\n    }\n}\n\nconst cardConverter = {\n    toFirestore: function(card) {\n        console.log('toFirestore called with ', card)\n        return {\n            title: card.title,\n            description: card.description\n        }\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new CardClass(data.title, uid, data.description)\n    }\n}\n\nexport const api = function() {\n    const db = firebase.firestore()\n    const getUser = async function(uid) {\n        // get the user specified by the uid\n        console.log('getUser called with uid ', uid)\n        try {\n            const doc = await db.collection('users').doc(uid).withConverter(userConverter).get()\n            if (doc.exists) {\n                const user = doc.data();\n                return user;\n            } else {\n                throw new Error('user not found')\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const authenticateAndGetUser = async function(email, password) {\n        try {\n            const response = await firebase.auth().signInWithEmailAndPassword(email, password);\n            if (response) {\n                const uid = response.user.uid;\n                const user = await getUser(uid)\n                return user;\n            }\n        } catch(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode, errorMessage)\n        };\n    }\n    const getBoard = async function(uid) {\n        // get the board specified by the uid\n        console.log('getBoard called with uid ', uid)\n        try {\n            const doc = await db.collection('boards').doc(uid).withConverter(boardConverter).get()\n            if (doc.exists) {\n                const board = doc.data();\n                return board;\n            } else {\n                throw new Error('board not found')\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getList = async function(uid) {\n        // get the list specified by the uid\n        console.log('getList called with ', uid)\n        try {\n            let doc = await db.collection('lists').doc(uid).withConverter(listConverter).get();\n            if (doc.exists) {\n                const list = doc.data();\n                return list;\n            } else {\n                throw new Error(`list not found`);\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getCard = async function(uid) {\n        // get the card specified by the uid\n        try {\n            let doc = await db.collection('cards').doc(uid).withConverter(cardConverter).get();\n            if (doc.exists) {\n                const card = doc.data();\n                return card;\n            } else {\n                throw new Error(`card not found`)\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getBoardsByUserId = async function(userId) {\n        // return an array of board objects\n        try {\n            let user = await getUser(userId);\n            if (!user) {\n                throw new Error('user not found')\n            } else {\n                try {\n                    let boardPromises = user.boardIds.map(async id => getBoard(id));\n                    if (boardPromises.length < 1) {\n                        //all users should have at least one board, since they get one at account creation.\n                        throw new Error('no boards found')\n                    } else {\n                        // wait until all mapped Promises are fulfilled\n                        return await Promise.all(boardPromises);\n                    }\n                } catch(error) {\n                    console.log(error)\n                }\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getListsByBoardId = async function(boardId) {\n        // return an array of list objects\n        console.log('looking for ' + boardId)\n        try {\n            let board = await getBoard(boardId);\n            if (!board) {\n                throw new Error('board not found')\n            } else {\n                try {\n                    //fix this! when adding a new board the listIds field will be null.\n                    let listPromises = board.listIds.map(async id => getList(id));\n                    console.log(listPromises)\n                    // wait until all mapped Promises are fulfilled\n                    return await Promise.all(listPromises);\n                } catch(error) {\n                    console.log(error)\n                }\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getCardsByListId = async function(listId) {\n        // return an array of card objects\n        try {\n            let list = await getList(listId);\n            if (!list) {\n                throw new Error('list not found')\n            } else if (!list.cardIds) {\n                return 'no cards in this list'\n            } else {\n                try {\n                    let cardPromises = list.cardIds.map(async id => getCard(id));\n                    // wait until all mapped Promises are fulfilled\n                    return await Promise.all(cardPromises);\n                } catch(error) {\n                    console.log(error)\n                }\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const updateBoard = async function(boardId, listId) {\n        try {\n            const boardRef = db.collection(\"boards\").doc(boardId);\n            let response = await boardRef.update({\n                    listIds: firebase.firestore.FieldValue.arrayUnion(listId)\n                });\n            return response;\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const removeFromBoard = async function(boardId, listId) {\n        try {\n            const boardRef = db.collection(\"boards\").doc(boardId);\n            let response = await boardRef.update({\n                listIds: firebase.firestore.FieldValue.arrayRemove(listId)\n            });\n            return response;\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const removeFromList = async function(listId, cardId) {\n        try {\n            const listRef = db.collection(\"lists\").doc(listId);\n            let response = await listRef.update({\n                cardIds: firebase.firestore.FieldValue.arrayRemove(cardId)\n            });\n            return response;\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const addList = async function(list) {\n        //add this object to the collection Lists\n        try {\n            let docRef = await db.collection(\"lists\").withConverter(listConverter).add({\n                name: list.name, \n                cardIds: list.cardIds})\n            if (docRef) {\n                const uid = docRef.id;\n                const addedList = new ListClass(list.name, uid, list.cardIds);\n                return addedList;\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const deleteList = async function(listId) {\n        console.log(\"deleteList called with id \", listId)\n        try {\n            const listRef = db.collection(\"lists\").doc(listId);\n            let response = await listRef.delete()\n            console.log(response)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const updateList = async function(listId, cardId) {\n        try {\n            const listRef = db.collection(\"lists\").doc(listId);\n            let response = await listRef.update({\n                    cardIds: firebase.firestore.FieldValue.arrayUnion(cardId)\n                });\n            return response;\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const addCard = async function(card) {\n        //add this object to the collection Lists\n        try {\n            let docRef = await db.collection(\"cards\").withConverter(cardConverter).add({\n                title: card.title,\n                description: card.description})\n            if (docRef) {\n                const uid = docRef.id;\n                const addedCard = new CardClass(card.title, uid, card.description);\n                return addedCard;\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const deleteCard = async function(cardId) {\n        console.log(\"deleteCard called with id \", cardId)\n        try {\n            const cardRef = db.collection(\"cards\").doc(cardId);\n            let response = await cardRef.delete()\n            console.log(response)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const updateCard = async function(cardId, key, value) {\n        console.log('updateCard called with ', arguments)\n        const cardRef = db.collection(\"cards\").doc(cardId);\n        switch (key) {\n            case \"description\":\n                console.log('description matched in switch')\n                try {\n                    await cardRef.update({description: value});\n                    return \"Document updated\"\n                } catch(error) {\n                    console.log(error)\n                }\n                break;\n            case \"title\":\n                console.log(\"title matched in switch\")\n                try {\n                    await cardRef.update({title: value});\n                    return \"Document updated\"\n                } catch(error) {\n                    console.log(error)\n                }\n                break;\n            default: console.log('invalid key passed')\n        }\n    }\n    return { \n        authenticateAndGetUser, \n        getUser, \n        getBoard, \n        getList, \n        getCard, \n        getBoardsByUserId, \n        getListsByBoardId, \n        getCardsByListId,\n        updateBoard,\n        removeFromBoard,\n        removeFromList,\n        addList,\n        deleteList,\n        updateList,\n        addCard,\n        deleteCard,\n        updateCard\n    }\n}","export default __webpack_public_path__ + \"static/media/recent-icon-dark.d4a8def6.svg\";","export default __webpack_public_path__ + \"static/media/member-icon-dark.28303ddf.svg\";","import { UserContext } from \"../Models/UserContext\"\nimport { Navigation } from \"../Components/Navigation\";\nimport { api } from \"../API/api\"\nimport { useContext, useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport \"./DashboardView.css\"\nimport recent from \"../icons/recent-icon-dark.svg\"\nimport member from \"../icons/member-icon-dark.svg\"\n\nexport const DashboardView = function() {\n    const [isLoading, setIsLoading] = useState(true)\n    const user = useContext(UserContext)\n    const remote = api()\n    const [ownedBoards, setOwnedBoards] = useState([])\n    const [sharedBoards, setSharedBoards] = useState([])\n    \n    const initBoards = async function(user) {\n        console.log('initBoards called with ', user)\n        if (!user) {\n            return;\n        }\n        let response = await remote.getBoardsByUserId(user.currentUser.uid);\n        if (response) {\n            setOwnedBoards(response.filter((board) => board.ownerId === user.currentUser.uid))\n            setSharedBoards(response.filter((board) => board.ownerId !== user.currentUser.uid))\n            setIsLoading(false)\n        } else {\n            console.log('not found')\n        }\n    };\n    \n    const ownedBoardsLinks = ownedBoards.map((board) =>\n        <Link className=\"boardTile\" key={`owned${board.uid}`} to={`/${board.uid}/${board.name}`}>\n            <div>{board.name}</div>\n        </Link>\n    );\n    const sharedBoardsLinks = sharedBoards.map((board) => \n        <Link className=\"boardTile\" key={`shared${board.uid}`} to={`/${board.uid}/${board.name}`}>\n            <div>{board.name}</div>\n        </Link>\n    );\n    \n    useEffect(() => {\n        initBoards(user);\n        let title = `Boards | Ello`\n        document.title = title;\n    },[])\n    \n    if (isLoading) {\n        return (\n            <div>please hold!</div>\n        )\n    } else {\n        return (\n            <div className=\"Dashboard\">\n                <Navigation />\n                <div className=\"boardTiles\">\n                    <div className=\"sectionTitle\">\n                        <img src={recent} alt=\"recently viewed icon\"></img>\n                        <h1>Your Boards</h1>\n                    </div>\n                    <section className=\"recents\">\n                        {ownedBoardsLinks}\n                    </section>\n                    <div className=\"sectionTitle\">\n                        <img src={member} alt=\"member icon\"></img>\n                        <h1>Shared Boards</h1>\n                    </div>\n                    <section className=\"all\">\n                        {sharedBoardsLinks}\n                    </section>\n                </div>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/delete-icon.28ac9259.svg\";","import './Delete.css'\nimport icon from '../icons/delete-icon.svg'\n\nexport const Delete = function(props) {\n    if (props.appearance === \"rectButton\") {\n        return (\n            <div className={`Delete ${props.appearance}`}>\n                <button\n                onClick={(e) => {\n                    e.preventDefault();\n                    props.delete(props.uid)\n                }}>\n                    <img src={icon} alt=\"delete icon\"></img> Archive\n                </button>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"Delete\">\n                <button\n                onClick={(e) => {\n                    e.preventDefault();\n                    props.delete(props.uid)\n                }}>\n                    <img src={icon} alt=\"delete icon\"></img>\n                </button>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/cancel-icon.f1e32e6f.svg\";","export default __webpack_public_path__ + \"static/media/description-icon.4e00cd49.svg\";","import { useState, useEffect } from 'react'\nimport TextareaAutosize from 'react-autosize-textarea';\nimport './Description.css'\nimport cancel from \"../icons/cancel-icon.svg\"\nimport description from \"../icons/description-icon.svg\"\n\nexport const Description = function(props) {\n    const [isActive, setIsActive] = useState(false)\n    const [text, setText] = useState(props.description)\n\n    const clickToCancel = function(event) {\n        const elem = event.target;\n        const action = elem.dataset.action\n        if (action !== \"ignore\") \n        {\n            setIsActive(false)\n            setText(props.description)\n        } else {\n            return;\n        }\n    }\n\n    const showControls = function(isActive) {\n        if (!isActive) {\n            return null;\n        } else {\n            return (\n                <div className=\"controls\">\n                    <button data-action=\"ignore\" type=\"submit\"\n                        onClick={() => {\n                            props.update(props.uid, 'description', text)\n                            setText(text)\n                            setIsActive(false)}}>\n                        Save\n                    </button>\n                    <button data-action=\"ignore\" className=\"cancel\"\n                        onClick={() => {\n                            setIsActive(false)\n                            setText(props.description)}}>\n                        <img data-action=\"ignore\" src={cancel} alt=\"cancel icon\"></img>\n                    </button>\n                </div>\n            )\n        }\n    }\n\n    //Using a button to reveal the textarea element circumvents an issue\n    //where changing the min-height of the focused textarea conflicted with \n    //the event firing from the save and cancel buttons. This way, the button\n    //can be the shorter height, and the focused textarea can still be larger.\n    const showTextarea = function(isActive) {\n        if (isActive) {\n            return (\n                <TextareaAutosize \n                    data-action=\"ignore\"\n                    placeholder=\"Add a more detailed description...\" \n                    value={text}\n                    autoFocus={true}\n                    onChange={(event) => setText(event.target.value)}>\n                </TextareaAutosize>\n            )\n        } else {\n            let content;\n            let appearance;\n            if (text === '') {\n                content = \"Add a more detailed description...\"\n                appearance = 'noDescription'\n            } else {\n                content = text;\n                appearance = 'hasDescription'\n            }\n            return (\n                <button className={`inactiveTextarea ${appearance}`} onClick={() => setIsActive(true)}>{content}</button>\n            )\n        }\n    }\n\n    useEffect(() => {\n        if (isActive) {\n            window.addEventListener('click', clickToCancel)\n        }\n        return function cleanUp() {\n            window.removeEventListener('click', clickToCancel)\n        }\n    })\n\n    return (\n        <div className=\"Description\">\n            <img src={description} alt=\"description icon\"></img>\n            <div className=\"contents\">\n                <h2>Description</h2>\n                {showTextarea(isActive)}\n                {showControls(isActive)}\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/title-icon.e2feb6ab.svg\";","import { useState } from 'react'\nimport TextareaAutosize from 'react-autosize-textarea';\nimport './Title.css'\nimport title from '../icons/title-icon.svg'\n\nexport const Title = function(props) {\n    //const [isActive, setIsActive] = useState(false)\n    const [text, setText] = useState(props.title)\n\n    return (\n        <div className=\"titleSection\">\n            <img src={title} alt=\"title icon\"></img>\n            <div className=\"titleDetails\">\n                <TextareaAutosize\n                    value={text}\n                    rows={1}\n                    onChange={(event) => setText(event.target.value)}\n                    onBlur={(event) => {\n                        const content = (event.target.value === \"\") ? props.title : event.target.value;\n                        props.update(props.uid, 'title', content)\n                        setText(content);\n                        }}>\n                </TextareaAutosize>\n                <p className=\"subhead\">in list <span className=\"actionText\">{props.parentList}</span></p>\n            </div>\n        </div>\n    )\n}","import { useState, useEffect } from 'react'\nimport { Delete } from \"./Delete\";\nimport { Description } from \"./Description\"\nimport { Title } from \"./Title\"\nimport \"./Card.css\"\nimport cancel from '../icons/cancel-icon.svg'\n\nexport const Card = function(props) {\n    const [isOpen, setIsOpen] = useState(false)\n\n    //This check prevents the click event from the Delete button from \n    //also briefly opening the Card modal.\n    const handleClick = function(event) {\n        const action = event.target.dataset.action;\n        if (action === 'controlCard') {\n            setIsOpen(true)\n        }\n    }\n\n    const clickToClose = function(event) {\n        const action = event.target.dataset.action;\n        if (action === 'closeCard') {\n            setIsOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        if (isOpen) {\n            window.addEventListener('click', clickToClose);\n            console.log('window is listening')\n        }\n        return function cleanUp() {\n            window.removeEventListener('click', clickToClose)\n        }\n    })\n\n    if (!isOpen) {\n        return (\n            <div className=\"Card closed\" data-action=\"controlCard\" onClick={(event) => handleClick(event)}>\n                {props.title}\n                <Delete\n                    uid={props.cardId}\n                    delete={props.deleteCard} />\n                {/* `modal` is display:none while Card is closed */}\n                <div className=\"modal\"></div>\n            </div>\n        )\n    } else {\n        return (\n            /* Card in List is still visible in the background when `open` */\n            <div className=\"Card open\">\n                {props.title}\n                <Delete\n                    uid={props.cardId}\n                    delete={props.deleteCard} />\n                <div className=\"modal\" data-action=\"closeCard\">\n                    <div className=\"cardContentsContainer\" data-action=\"closeCard\">\n                        <div className=\"cardContents\">\n                            <Title \n                                uid={props.cardId}\n                                title={props.title}\n                                parentList={props.parentList}\n                                update={props.update} />\n                            <button className=\"close\" onClick={() => setIsOpen(false)}>\n                                    <img src={cancel} alt=\"cancel icon\"></img>\n                            </button>\n                            <div className=\"editableSections\">\n                                <Description\n                                    uid={props.cardId} \n                                    description={props.description}\n                                    update={props.update} />\n                            </div>\n                            <div className=\"sideMenu\">\n                                <h4 className=\"sectionHeader\">Actions</h4>\n                                <Delete\n                                    appearance=\"rectButton\"\n                                    uid={props.cardId}\n                                    delete={props.deleteCard} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import { useState } from 'react'\nimport './Add.css'\nimport cancel from '../icons/cancel-icon.svg'\n\nexport const Add = function(props) {\n    const [isActive, setIsActive] = useState(false)\n\n    if (!isActive) {\n        return (\n            <div className={`Add ${props.source}`}>\n                <button onClick={() => setIsActive(true)}>\n                    &#43; Add another {props.source}\n                </button>\n            </div>\n        )\n    } else {\n        if (props.source === 'list') {\n            return (\n                <div className=\"addList\">\n                    <form onSubmit={\n                        (event) => {\n                            event.preventDefault();\n                            const value = event.target[0].value\n                            props.add(value)\n                            setIsActive(false)\n                            }}>\n                        <input type=\"text\" placeholder=\"Enter list title...\" autoFocus='true'></input>\n                        <button type=\"submit\">Add</button>\n                        <button className=\"cancel\" onClick={() => setIsActive(false)}>\n                            <img src={cancel} alt=\"cancel icon\"></img>\n                        </button>\n                    </form>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"addCard\">\n                    <form onSubmit={\n                        (event) => {\n                            event.preventDefault();\n                            const value = event.target[0].value\n                            props.add(value)\n                            setIsActive(false)\n                            }}>\n                        <textarea placeholder=\"Enter a title for this card...\" autoFocus={true}></textarea>\n                        <button type=\"submit\">Add</button>\n                        <button className=\"cancel\" onClick={() => setIsActive(false)}>\n                            <img src={cancel} alt=\"cancel icon\"></img>\n                        </button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}","import { useState, useEffect } from 'react'\nimport { Card } from './Card'\nimport { api } from '../API/api'\nimport { Delete } from './Delete'\nimport { Add } from './Add'\nimport \"./List.css\"\n\nexport const List = function(props) {\n    const [isLoading, setIsLoading] = useState(true)\n    const [cards, setCards] = useState([])\n    const remote = api()\n    \n    const initCards = async function(listId) {\n        if (!listId) {\n            return;\n        }\n        let response = await remote.getCardsByListId(listId);\n        if (response === 'no cards in this list') {\n            setCards([])\n            setIsLoading(false)\n        } else if (response) {\n            setCards(response)\n            setIsLoading(false)\n        } else {\n            console.log('somthing went wrong')\n        }\n    };\n\n    const refreshWithNewCard = async function(input) { \n        const newCard = {\n            title: input,\n            description: \"\"\n        }\n        let addedCard = await remote.addCard(newCard);\n        if (addedCard) {\n            remote.updateList(props.listId, addedCard.uid)\n            setCards([...cards, addedCard]) \n        } else {\n            console.log('error adding new card')\n        }\n    }\n\n    const refreshWithUpdatedCard = async function(cardId, key, value) {\n        let updatedCard = await remote.updateCard(cardId, key, value);\n        if (updatedCard) {\n            const cardsCopy = cards.slice();\n            const isCard = card => card.uid === cardId;\n            const indexOfMatch = cardsCopy.findIndex(isCard);\n            switch (key) {\n                case 'title':\n                    cardsCopy[indexOfMatch].title = value;\n                    break;\n                case 'description':\n                    cardsCopy[indexOfMatch].description = value;\n                    break;\n                default: \n                    console.log('no such key');\n            }\n            setCards(cardsCopy)\n        } else {\n            console.log('error updating card')\n        }\n    }\n\n    const deleteCard = async function(cardId) {\n        let response = await remote.deleteCard(cardId);\n        if (response === undefined) {\n            remote.removeFromList(props.listId, cardId)\n            const cardsCopy = cards.slice();\n            const isCard = (card) => card.uid === cardId;\n            const indexOfMatch = cardsCopy.findIndex(isCard);\n            cardsCopy.splice(indexOfMatch, 1)\n            setCards(cardsCopy)\n        } else {\n            console.log('there was an error deleting the card')\n        }\n    }\n    \n    const cardDisplay = cards.map((card) =>\n        <div className=\"cardContainer\" key={card.uid}>\n            <Card \n                deleteCard={deleteCard}\n                cardId={card.uid}\n                title={card.title}\n                description={card.description}\n                parentList={props.name}\n                update={refreshWithUpdatedCard}\n            />\n        </div>\n    );\n    \n    useEffect(() => {\n        initCards(props.listId);\n    },[])\n\n    if (isLoading) {\n        return (\n            <div>please hold!</div>\n        )\n    } else {\n        return (\n            <div className=\"List\">\n                <div className=\"listName\">\n                    {props.name}\n                    <Delete \n                        uid={props.listId}\n                        delete={props.deleteList}\n                    />\n                </div>\n                {cardDisplay}\n                <Add \n                    source=\"card\"\n                    add={refreshWithNewCard}\n                />\n            </div>\n        )\n    }\n}","import { useState, useEffect } from \"react\"\nimport { useRouteMatch } from \"react-router-dom\"\nimport { api } from \"../API/api\"\nimport { List } from \"../Components/List\"\nimport { Navigation } from \"../Components/Navigation\"\nimport { Add } from \"../Components/Add\"\nimport \"./BoardView.css\"\n\nexport const BoardView = function(props) {\n    const [isLoading, setIsLoading] = useState(true)\n    const [lists, setLists] = useState([])\n    const remote = api()\n    const match = useRouteMatch();\n    \n    const initLists = async function(boardId) {\n        if (!boardId) {\n            return;\n        }\n        let response = await remote.getListsByBoardId(boardId);\n        if (response) {\n            setLists(response)\n            setIsLoading(false)\n        } else {\n            console.log('lists not found')\n        }\n    };\n\n    const refreshLists = async function(input) { \n        const newList = {\n            name: input,\n            cardIds: null\n        }\n        let addedList = await remote.addList(newList);\n        if (addedList) {\n            remote.updateBoard(match.params.boardId, addedList.uid)\n            setLists([...lists, addedList]) \n        } else {\n            console.log('error adding new list')\n        }\n    }\n\n    const deleteList = async function(listId) {\n        let response = await remote.deleteList(listId);\n        if (response === undefined) {\n            remote.removeFromBoard(match.params.boardId, listId)\n            const copyOfLists = lists.slice();\n            const isList = (list) => list.uid === listId;\n            const indexOfMatch = copyOfLists.findIndex(isList);\n            copyOfLists.splice(indexOfMatch, 1)\n            setLists(copyOfLists)\n        } else {\n            console.log('there was an error deleting the list')\n        }\n    }\n    \n    const listDisplay = lists.map((list) =>\n        <div key={list.uid}>\n            <List \n                deleteList={deleteList}\n                listId={list.uid}\n                name={list.name}\n            />\n        </div>\n    );\n    \n    useEffect(() => {\n        initLists(match.params.boardId);\n        let title = `${match.params.boardName} | Ello`;\n        document.title = title;\n    },[])\n\n    if (isLoading) {\n        return (\n            <div>Please hold!</div>\n        )\n    } else {\n        return (\n            <div>\n                <Navigation />\n                <div className=\"boardContainer\">\n                    <div className=\"boardDetailBar\">\n                        <h1>{match.params.boardName}</h1>\n                    </div>\n                    <div className=\"listsContainer\">\n                        {listDisplay}\n                        <Add \n                            source=\"list\"\n                            add={refreshLists}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","export const NoMatch = function() {\n    return (\n        <div>\n            oops...something went wrong :(\n        </div>\n    )\n}","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { useContext, useState } from 'react'\nimport { LoginView } from \"./Views/LoginView\"\nimport { DashboardView } from \"./Views/DashboardView\"\nimport { api } from './API/api'\nimport './App.css';\nimport { UserContext } from './Models/UserContext';\nimport { BoardView } from './Views/BoardView'\nimport { NoMatch } from './Views/NoMatch'\n\nexport function App() {\n  const remote = api();\n  const userDefaults = useContext(UserContext)\n  const [user, setUser] = useState(userDefaults);\n\n  const checkUserCredentials = async function(email, password) {\n    let response = await remote.authenticateAndGetUser(email, password);\n    console.log('auth response is ', response)\n    if (response) {\n      setUser({\n        currentUser: response,\n        isLoggedIn: true,\n        setLogOut: (isLoggedIn) => {\n          if (isLoggedIn) {\n            setUser(userDefaults)\n          };\n        }\n      });\n      console.log('the state variable user is ', user)\n    } else {\n      console.log(`try again`)\n    }\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {user.isLoggedIn ? <Redirect to={`/${user.currentUser.email}/boards`} /> :\n            <LoginView checkUserCredentials={checkUserCredentials} />}\n          </Route>\n          <Route exact path=\"/login\">\n            {user.isLoggedIn ? <Redirect to={`/${user.currentUser.email}/boards`} /> :\n            <LoginView checkUserCredentials={checkUserCredentials} />}\n          </Route>\n          <Route exact path=\"/:email/boards\">\n            {user.isLoggedIn ? <DashboardView /> :\n            <Redirect to=\"/login\" />}\n          </Route>\n          <Route exact path=\"/:boardId/:boardName\">\n            {user.isLoggedIn ? <BoardView /> :\n            <Redirect to=\"/login\" />}\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </ Router>\n    </div>\n    </UserContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}