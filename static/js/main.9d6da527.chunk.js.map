{"version":3,"sources":["Components/Form.js","logo.svg","Views/LoginView.js","Models/UserContext.js","Components/UserAccount.js","icons/logo-white.svg","icons/home-icon.svg","Components/Navigation.js","Models/UserClass.js","Models/BoardClass.js","Models/ListClass.js","Models/CardClass.js","API/api.js","icons/recent-icon-dark.svg","icons/member-icon-dark.svg","Views/DashboardView.js","icons/delete-icon.svg","Components/Delete.js","icons/cancel-icon.svg","icons/description-icon.svg","Components/Description.js","icons/title-icon.svg","Components/Title.js","Components/Card.js","Components/Add.js","Components/List.js","Views/BoardView.js","Views/NoMatch.js","App.js","index.js"],"names":["Form","props","className","onSubmit","event","preventDefault","elem","target","username","value","password","checkUserCredentials","type","placeholder","LoginView","useEffect","document","title","src","logo","alt","UserContext","createContext","currentUser","isLoggedIn","setIsLoggedIn","UserAccount","firstInitial","user","email","slice","useState","isOpen","setIsOpen","closeMenu","name","window","addEventListener","removeEventListener","onClick","toUpperCase","to","setLogOut","Navigation","useContext","isDashboard","useRouteMatch","url","includes","background","data-action","home","UserClass","uid","boardIds","this","BoardClass","ownerId","listIds","memberIds","ListClass","cardIds","CardClass","description","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","userConverter","toFirestore","console","log","fromFirestore","snapshot","options","data","ref","id","boardConverter","board","listConverter","list","cardConverter","card","api","db","firestore","getUser","a","collection","doc","withConverter","get","exists","Error","authenticateAndGetUser","auth","signInWithEmailAndPassword","response","errorCode","code","errorMessage","message","getBoard","getList","getCard","getBoardsByUserId","userId","boardPromises","map","length","Promise","all","getListsByBoardId","boardId","listPromises","getCardsByListId","listId","cardPromises","updateBoard","key","boardRef","update","FieldValue","arrayUnion","removeFromBoard","arrayRemove","removeFromList","cardId","listRef","addList","add","docRef","addedList","deleteList","delete","updateList","addCard","addedCard","deleteCard","cardRef","updateCard","DashboardView","isLoading","setIsLoading","remote","ownedBoards","setOwnedBoards","sharedBoards","setSharedBoards","initBoards","filter","ownedBoardsLinks","sharedBoardsLinks","recent","member","Delete","appearance","e","icon","Description","isActive","setIsActive","text","setText","clickToCancel","dataset","action","autoFocus","onChange","content","showTextarea","cancel","showControls","Title","rows","onBlur","parentList","Card","clickToClose","handleClick","Add","source","List","cards","setCards","initCards","refreshWithNewCard","input","newCard","refreshWithUpdatedCard","cardsCopy","isCard","indexOfMatch","findIndex","undefined","splice","cardDisplay","BoardView","isVisible","lists","setLists","settings","setSettings","menuIsVisible","setMenuIsVisible","match","initLists","boardResponse","listsResponse","refreshLists","newList","params","refreshSettings","selection","copyOfLists","isList","listDisplay","boardName","close","NoMatch","App","userDefaults","setUser","Provider","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d6da527.chunk.js","sourcesContent":["import './Form.css'\n\nexport const Form = function(props) {\n    return (\n        <div className=\"Form\">\n            <h1>Log in to Ello</h1>\n            <form onSubmit={(event) => {\n                    event.preventDefault();\n                    const elem = event.target;\n                    const username = elem[0].value;\n                    const password = elem[1].value;\n                    props.checkUserCredentials(username, password)\n                }}>\n                <input type=\"text\" placeholder=\"username\"></input>\n                <input type=\"password\" placeholder=\"password\"></input>\n                <button type=\"submit\">Sign in</button>\n            </form>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo.e6046145.svg\";","import { useEffect } from 'react'\nimport { Form } from \"../Components/Form\"\nimport logo from '../logo.svg'\nimport './LoginView.css'\n\nexport const LoginView = function(props) {\n\n    useEffect(() => {\n        let title = `Login | Ello`\n        document.title = title;\n    },[])\n\n    return (\n        <div className=\"LoginView\">\n            <img src={logo} alt=\"Ello logo\"></img>\n            <Form\n            checkUserCredentials={props.checkUserCredentials} />\n        </div>\n    )\n}","import { createContext } from 'react';\n\nexport const UserContext = createContext({\n  currentUser: null,\n  isLoggedIn: false,\n  setIsLoggedIn: (isLoggedIn) => {\n    return !isLoggedIn\n  },\n});","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './UserAccount.css'\n\nexport const UserAccount = function(props) {\n    const email = props.user.currentUser.email;\n    const firstInitial = email.slice(0,1);\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const openMenu = function() {\n        setIsOpen(true)\n    }\n\n    const closeMenu = function() {\n        setIsOpen(false)\n    }\n\n    const name = isOpen ? \"open\":\"closed\"\n\n    useEffect(() => {\n        if (isOpen) {\n            window.addEventListener('click', closeMenu)\n        }\n        return function cleanUp() {\n            window.removeEventListener('click', closeMenu)\n        }\n    })\n\n    return (\n        <div className=\"UserAccount\">\n            <div className=\"userIcon\" onClick={openMenu}>\n                {firstInitial.toUpperCase()}\n            </div>\n            <div className={`menu ${name}`}>\n                <Link to=\"/login\" onClick={() => {props.user.setLogOut(props.user.isLoggedIn);}}>\n                    <div className=\"menuItem\">\n                        Log out\n                    </div>\n                </Link>\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo-white.49c8f8b0.svg\";","export default __webpack_public_path__ + \"static/media/home-icon.da235aea.svg\";","import { Link, useRouteMatch } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { UserContext } from '../Models/UserContext'\nimport { UserAccount } from './UserAccount'\nimport logo from '../icons/logo-white.svg'\nimport home from '../icons/home-icon.svg'\nimport './Navigation.css'\nimport '../Views/BackgroundSettings.css'\n\nexport const Navigation = function(props) {\n    const user = useContext(UserContext)\n    const match = useRouteMatch();\n    const isDashboard = match.url.includes('/boards')\n    //The data attribute in navigation ensures that click-to-close will\n    //work for an opened card.\n    return (\n        <nav className={`${isDashboard ? 'dash' : 'board'} ${props.background}`} data-action=\"closeCard\">\n            <Link className=\"buttonContainer\" to={`/${user.currentUser.username}/boards`}>\n                <button className=\"main\">\n                    <img src={home} alt=\"home icon\"></img>\n                </button>\n            </Link>\n            <Link className=\"logoContainer\" to=\"/\">\n                <img src={logo} alt=\"logo\"></img>\n            </Link>\n            <UserAccount user={user} />\n        </nav>\n    )\n}","export class UserClass {\n    constructor(email, uid, boardIds) {\n        this.email = email;\n        this.uid = uid;\n        this.boardIds = boardIds;\n    }\n}","export class BoardClass {\n    constructor(name, uid, ownerId, listIds, memberIds, background) {\n      this.name = name;\n      this.uid = uid;\n      this.ownerId = ownerId;\n      this.listIds = listIds;\n      this.memberIds = memberIds;\n      this.background = background;\n    }\n  }","export class ListClass {\n    constructor(name, uid, cardIds) {\n        this.name = name;\n        this.uid = uid;\n        this.cardIds = cardIds;\n    }\n}","export class CardClass {\n    constructor(title, uid, description) {\n        this.title = title;\n        this.uid = uid;\n        this.description = description;\n    }\n}","import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\nimport { UserClass } from '../Models/UserClass'\nimport { BoardClass } from '../Models/BoardClass'\nimport { ListClass } from '../Models/ListClass'\nimport { CardClass } from '../Models/CardClass'\n\nconst firebaseConfig = {\n    apiKey: `${process.env.REACT_APP_APIKEY}`,\n    authDomain: `${process.env.REACT_APP_AUTHDOMAIN}`,\n    projectId: `${process.env.REACT_APP_PROJECTID}`,\n    storageBucket: `${process.env.REACT_APP_STORAGEBUCKET}`,\n    messagingSenderId: `${process.env.REACT_APP_MESSENGINGSENDERID}`,\n    appId: `${process.env.REACT_APP_APPID}`\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst userConverter = {\n    toFirestore: function(user) {\n        console.log('toFirestore called with ', user)\n        return {\n            email: user.email,\n            boardIds: user.boardIds\n            };\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new UserClass(data.email, uid, data.boardIds);\n    }\n}\n\nconst boardConverter = {\n    toFirestore: function(board) {\n        console.log('toFirestore called with ', board)\n        return {\n            name: board.name,\n            ownerId: board.ownerId,\n            listIds: board.listIds,\n            memberIds: board.memberIds,\n            background: board.background\n        };\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new BoardClass(data.name, uid, data.ownerId, data.listIds, data.memberIds, data.background)\n    }\n}\n\nconst listConverter = {\n    toFirestore: function(list) {\n        console.log('toFirestore called with ', list)\n        return {\n            name: list.name,\n            cardIds: list.cardIds\n        }\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new ListClass(data.name, uid, data.cardIds)\n    }\n}\n\nconst cardConverter = {\n    toFirestore: function(card) {\n        console.log('toFirestore called with ', card)\n        return {\n            title: card.title,\n            description: card.description\n        }\n    },\n    fromFirestore: function(snapshot, options) {\n        const data = snapshot.data(options);\n        const uid = snapshot.ref.id\n        console.log('fromFirestore called with ', data)\n        return new CardClass(data.title, uid, data.description)\n    }\n}\n\nexport const api = function() {\n    const db = firebase.firestore()\n    const getUser = async function(uid) {\n        // get the user specified by the uid\n        console.log('getUser called with uid ', uid)\n        try {\n            const doc = await db.collection('users').doc(uid).withConverter(userConverter).get()\n            if (doc.exists) {\n                const user = doc.data();\n                return user;\n            } else {\n                throw new Error('user not found')\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const authenticateAndGetUser = async function(email, password) {\n        try {\n            const response = await firebase.auth().signInWithEmailAndPassword(email, password);\n            if (response) {\n                const uid = response.user.uid;\n                const user = await getUser(uid)\n                return user;\n            }\n        } catch(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode, errorMessage)\n        };\n    }\n    const getBoard = async function(uid) {\n        // get the board specified by the uid\n        console.log('getBoard called with uid ', uid)\n        try {\n            const doc = await db.collection('boards').doc(uid).withConverter(boardConverter).get()\n            if (doc.exists) {\n                const board = doc.data();\n                return board;\n            } else {\n                throw new Error('board not found')\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getList = async function(uid) {\n        // get the list specified by the uid\n        console.log('getList called with ', uid)\n        try {\n            let doc = await db.collection('lists').doc(uid).withConverter(listConverter).get();\n            if (doc.exists) {\n                const list = doc.data();\n                return list;\n            } else {\n                throw new Error(`list not found`);\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getCard = async function(uid) {\n        // get the card specified by the uid\n        try {\n            let doc = await db.collection('cards').doc(uid).withConverter(cardConverter).get();\n            if (doc.exists) {\n                const card = doc.data();\n                return card;\n            } else {\n                throw new Error(`card not found`)\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getBoardsByUserId = async function(userId) {\n        // return an array of board objects\n        try {\n            let user = await getUser(userId);\n            if (!user) {\n                throw new Error('user not found')\n            } else {\n                try {\n                    let boardPromises = user.boardIds.map(async id => getBoard(id));\n                    if (boardPromises.length < 1) {\n                        //all users should have at least one board, since they get one at account creation.\n                        throw new Error('no boards found')\n                    } else {\n                        // wait until all mapped Promises are fulfilled\n                        return await Promise.all(boardPromises);\n                    }\n                } catch(error) {\n                    console.log(error)\n                }\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getListsByBoardId = async function(boardId) {\n        // return an array of list objects\n        console.log('looking for ' + boardId)\n        try {\n            let board = await getBoard(boardId);\n            if (!board) {\n                throw new Error('board not found')\n            } else {\n                try {\n                    //fix this! when adding a new board the listIds field will be null.\n                    let listPromises = board.listIds.map(async id => getList(id));\n                    console.log(listPromises)\n                    // wait until all mapped Promises are fulfilled\n                    return await Promise.all(listPromises);\n                } catch(error) {\n                    console.log(error)\n                }\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const getCardsByListId = async function(listId) {\n        // return an array of card objects\n        try {\n            let list = await getList(listId);\n            if (!list) {\n                throw new Error('list not found')\n            } else if (!list.cardIds) {\n                return 'no cards in this list'\n            } else {\n                try {\n                    let cardPromises = list.cardIds.map(async id => getCard(id));\n                    // wait until all mapped Promises are fulfilled\n                    return await Promise.all(cardPromises);\n                } catch(error) {\n                    console.log(error)\n                }\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const updateBoard = async function(boardId, key, value) {\n        const boardRef = db.collection(\"boards\").doc(boardId);\n        switch (key) {\n            case \"listIds\":\n                console.log('listIds matched in switch')\n                try {\n                    let response = await boardRef.update({\n                            listIds: firebase.firestore.FieldValue.arrayUnion(value)\n                        });\n                    return response;\n                } catch(error) {\n                    console.log(error)\n                }\n                break;\n            case \"background\":\n                console.log(\"background matched in switch\")\n                try {\n                    await boardRef.update({background: value});\n                    return \"Document updated\"\n                } catch(error) {\n                    console.log(error)\n                }\n                break;\n            default: console.log('invalid key passed')\n        }\n    }\n    const removeFromBoard = async function(boardId, listId) {\n        try {\n            const boardRef = db.collection(\"boards\").doc(boardId);\n            let response = await boardRef.update({\n                listIds: firebase.firestore.FieldValue.arrayRemove(listId)\n            });\n            return response;\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const removeFromList = async function(listId, cardId) {\n        try {\n            const listRef = db.collection(\"lists\").doc(listId);\n            let response = await listRef.update({\n                cardIds: firebase.firestore.FieldValue.arrayRemove(cardId)\n            });\n            return response;\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const addList = async function(list) {\n        //add this object to the collection Lists\n        try {\n            let docRef = await db.collection(\"lists\").withConverter(listConverter).add({\n                name: list.name, \n                cardIds: list.cardIds})\n            if (docRef) {\n                const uid = docRef.id;\n                const addedList = new ListClass(list.name, uid, list.cardIds);\n                return addedList;\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const deleteList = async function(listId) {\n        console.log(\"deleteList called with id \", listId)\n        try {\n            const listRef = db.collection(\"lists\").doc(listId);\n            let response = await listRef.delete()\n            console.log(response)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const updateList = async function(listId, cardId) {\n        try {\n            const listRef = db.collection(\"lists\").doc(listId);\n            let response = await listRef.update({\n                    cardIds: firebase.firestore.FieldValue.arrayUnion(cardId)\n                });\n            return response;\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const addCard = async function(card) {\n        //add this object to the collection Lists\n        try {\n            let docRef = await db.collection(\"cards\").withConverter(cardConverter).add({\n                title: card.title,\n                description: card.description})\n            if (docRef) {\n                const uid = docRef.id;\n                const addedCard = new CardClass(card.title, uid, card.description);\n                return addedCard;\n            }\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const deleteCard = async function(cardId) {\n        console.log(\"deleteCard called with id \", cardId)\n        try {\n            const cardRef = db.collection(\"cards\").doc(cardId);\n            let response = await cardRef.delete()\n            console.log(response)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const updateCard = async function(cardId, key, value) {\n        console.log('updateCard called with ', arguments)\n        const cardRef = db.collection(\"cards\").doc(cardId);\n        switch (key) {\n            case \"description\":\n                console.log('description matched in switch')\n                try {\n                    await cardRef.update({description: value});\n                    return \"Document updated\"\n                } catch(error) {\n                    console.log(error)\n                }\n                break;\n            case \"title\":\n                console.log(\"title matched in switch\")\n                try {\n                    await cardRef.update({title: value});\n                    return \"Document updated\"\n                } catch(error) {\n                    console.log(error)\n                }\n                break;\n            default: console.log('invalid key passed')\n        }\n    }\n    return { \n        authenticateAndGetUser, \n        getUser, \n        getBoard, \n        getList, \n        getCard, \n        getBoardsByUserId, \n        getListsByBoardId, \n        getCardsByListId,\n        updateBoard,\n        removeFromBoard,\n        removeFromList,\n        addList,\n        deleteList,\n        updateList,\n        addCard,\n        deleteCard,\n        updateCard\n    }\n}","export default __webpack_public_path__ + \"static/media/recent-icon-dark.d4a8def6.svg\";","export default __webpack_public_path__ + \"static/media/member-icon-dark.28303ddf.svg\";","import { UserContext } from \"../Models/UserContext\"\nimport { Navigation } from \"../Components/Navigation\";\nimport { api } from \"../API/api\"\nimport { useContext, useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport recent from \"../icons/recent-icon-dark.svg\"\nimport member from \"../icons/member-icon-dark.svg\"\nimport \"./DashboardView.css\"\nimport \"./BackgroundSettings.css\"\n\nexport const DashboardView = function() {\n    const [isLoading, setIsLoading] = useState(true)\n    const user = useContext(UserContext)\n    const remote = api()\n    const [ownedBoards, setOwnedBoards] = useState([])\n    const [sharedBoards, setSharedBoards] = useState([])\n    \n    const initBoards = async function(user) {\n        console.log('initBoards called with ', user)\n        if (!user) {\n            return;\n        }\n        let response = await remote.getBoardsByUserId(user.currentUser.uid);\n        if (response) {\n            setOwnedBoards(response.filter((board) => board.ownerId === user.currentUser.uid))\n            setSharedBoards(response.filter((board) => board.ownerId !== user.currentUser.uid))\n            setIsLoading(false)\n        } else {\n            console.log('not found')\n        }\n    };\n    \n    const ownedBoardsLinks = ownedBoards.map((board) =>\n        <Link className={`boardTile ${board.background}`} key={`owned${board.uid}`} to={`/${board.uid}/${board.name}`}>\n            <div>{board.name}</div>\n        </Link>\n    );\n    const sharedBoardsLinks = sharedBoards.map((board) => \n        <Link className={`boardTile ${board.background}`} key={`shared${board.uid}`} to={`/${board.uid}/${board.name}`}>\n            <div>{board.name}</div>\n        </Link>\n    );\n    \n    useEffect(() => {\n        initBoards(user);\n        let title = `Boards | Ello`\n        document.title = title;\n    },[])\n    \n    if (isLoading) {\n        return (\n            <div>\n                <Navigation />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"Dashboard\">\n                <Navigation />\n                <div className=\"boardTiles\">\n                    <div className=\"sectionTitle\">\n                        <img src={recent} alt=\"recently viewed icon\"></img>\n                        <h1>Your Boards</h1>\n                    </div>\n                    <section className=\"recents\">\n                        {ownedBoardsLinks}\n                    </section>\n                    <div className=\"sectionTitle\">\n                        <img src={member} alt=\"member icon\"></img>\n                        <h1>Shared Boards</h1>\n                    </div>\n                    <section className=\"all\">\n                        {sharedBoardsLinks}\n                    </section>\n                </div>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/delete-icon.28ac9259.svg\";","import './Delete.css'\nimport icon from '../icons/delete-icon.svg'\n\nexport const Delete = function(props) {\n    if (props.appearance === \"rectButton\") {\n        return (\n            <div className={`Delete ${props.appearance}`}>\n                <button\n                onClick={(e) => {\n                    e.preventDefault();\n                    props.delete(props.uid)\n                }}>\n                    <img src={icon} alt=\"delete icon\"></img> Archive\n                </button>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"Delete\">\n                <button\n                onClick={(e) => {\n                    e.preventDefault();\n                    props.delete(props.uid)\n                }}>\n                    <img src={icon} alt=\"delete icon\"></img>\n                </button>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/cancel-icon.f1e32e6f.svg\";","export default __webpack_public_path__ + \"static/media/description-icon.4e00cd49.svg\";","import { useState, useEffect } from 'react'\nimport TextareaAutosize from 'react-autosize-textarea';\nimport './Description.css'\nimport cancel from \"../icons/cancel-icon.svg\"\nimport description from \"../icons/description-icon.svg\"\n\nexport const Description = function(props) {\n    const [isActive, setIsActive] = useState(false)\n    const [text, setText] = useState(props.description)\n\n    const clickToCancel = function(event) {\n        const elem = event.target;\n        const action = elem.dataset.action\n        if (action !== \"ignore\") \n        {\n            setIsActive(false)\n            setText(props.description)\n        } else {\n            return;\n        }\n    }\n\n    const showControls = function(isActive) {\n        if (!isActive) {\n            return null;\n        } else {\n            return (\n                <div className=\"controls\">\n                    <button data-action=\"ignore\" type=\"submit\"\n                        onClick={() => {\n                            props.update(props.uid, 'description', text)\n                            setText(text)\n                            setIsActive(false)}}>\n                        Save\n                    </button>\n                    <button data-action=\"ignore\" className=\"cancel\"\n                        onClick={() => {\n                            setIsActive(false)\n                            setText(props.description)}}>\n                        <img data-action=\"ignore\" src={cancel} alt=\"cancel icon\"></img>\n                    </button>\n                </div>\n            )\n        }\n    }\n\n    //Using a button to reveal the textarea element circumvents an issue\n    //where changing the min-height of the focused textarea conflicted with \n    //the event firing from the save and cancel buttons. This way, the button\n    //can be the shorter height, and the focused textarea can still be larger.\n    const showTextarea = function(isActive) {\n        if (isActive) {\n            return (\n                <TextareaAutosize \n                    data-action=\"ignore\"\n                    placeholder=\"Add a more detailed description...\" \n                    value={text}\n                    autoFocus={true}\n                    onChange={(event) => setText(event.target.value)}>\n                </TextareaAutosize>\n            )\n        } else {\n            let content;\n            let appearance;\n            if (text === '') {\n                content = \"Add a more detailed description...\"\n                appearance = 'noDescription'\n            } else {\n                content = text;\n                appearance = 'hasDescription'\n            }\n            return (\n                <button className={`inactiveTextarea ${appearance}`} onClick={() => setIsActive(true)}>{content}</button>\n            )\n        }\n    }\n\n    useEffect(() => {\n        if (isActive) {\n            window.addEventListener('click', clickToCancel)\n        }\n        return function cleanUp() {\n            window.removeEventListener('click', clickToCancel)\n        }\n    })\n\n    return (\n        <div className=\"Description\">\n            <img src={description} alt=\"description icon\"></img>\n            <div className=\"contents\">\n                <h2>Description</h2>\n                {showTextarea(isActive)}\n                {showControls(isActive)}\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/title-icon.e2feb6ab.svg\";","import { useState } from 'react'\nimport TextareaAutosize from 'react-autosize-textarea';\nimport './Title.css'\nimport title from '../icons/title-icon.svg'\n\nexport const Title = function(props) {\n    //const [isActive, setIsActive] = useState(false)\n    const [text, setText] = useState(props.title)\n\n    return (\n        <div className=\"titleSection\">\n            <img src={title} alt=\"title icon\"></img>\n            <div className=\"titleDetails\">\n                <TextareaAutosize\n                    value={text}\n                    rows={1}\n                    onChange={(event) => setText(event.target.value)}\n                    onBlur={(event) => {\n                        const content = (event.target.value === \"\") ? props.title : event.target.value;\n                        props.update(props.uid, 'title', content)\n                        setText(content);\n                        }}>\n                </TextareaAutosize>\n                <p className=\"subhead\">in list <span className=\"actionText\">{props.parentList}</span></p>\n            </div>\n        </div>\n    )\n}","import { useState, useEffect } from 'react'\nimport { Delete } from \"./Delete\";\nimport { Description } from \"./Description\"\nimport { Title } from \"./Title\"\nimport \"./Card.css\"\nimport cancel from '../icons/cancel-icon.svg'\n\nexport const Card = function(props) {\n    const [isOpen, setIsOpen] = useState(false)\n\n    //This check prevents the click event from the Delete button from \n    //also briefly opening the Card modal.\n    const handleClick = function(event) {\n        const action = event.target.dataset.action;\n        if (action === 'controlCard') {\n            setIsOpen(true)\n        }\n    }\n\n    const clickToClose = function(event) {\n        const action = event.target.dataset.action;\n        if (action === 'closeCard') {\n            setIsOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        if (isOpen) {\n            window.addEventListener('click', clickToClose);\n            console.log('window is listening')\n        }\n        return function cleanUp() {\n            window.removeEventListener('click', clickToClose)\n        }\n    })\n\n    if (!isOpen) {\n        return (\n            <div className=\"Card closed\" data-action=\"controlCard\" onClick={(event) => handleClick(event)}>\n                {props.title}\n                <Delete\n                    uid={props.cardId}\n                    delete={props.deleteCard} />\n                {/* `modal` is display:none while Card is closed */}\n                <div className=\"modal\"></div>\n            </div>\n        )\n    } else {\n        return (\n            /* Card in List is still visible in the background when `open` */\n            <div className=\"Card open\">\n                {props.title}\n                <Delete\n                    uid={props.cardId}\n                    delete={props.deleteCard} />\n                <div className=\"modal\" data-action=\"closeCard\">\n                    <div className=\"cardContentsContainer\" data-action=\"closeCard\">\n                        <div className=\"cardContents\">\n                            <Title \n                                uid={props.cardId}\n                                title={props.title}\n                                parentList={props.parentList}\n                                update={props.update} />\n                            <button className=\"close\" onClick={() => setIsOpen(false)}>\n                                    <img src={cancel} alt=\"cancel icon\"></img>\n                            </button>\n                            <div className=\"editableSections\">\n                                <Description\n                                    uid={props.cardId} \n                                    description={props.description}\n                                    update={props.update} />\n                            </div>\n                            <div className=\"sideMenu\">\n                                <h4 className=\"sectionHeader\">Actions</h4>\n                                <Delete\n                                    appearance=\"rectButton\"\n                                    uid={props.cardId}\n                                    delete={props.deleteCard} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import { useState } from 'react'\nimport './Add.css'\nimport cancel from '../icons/cancel-icon.svg'\n\nexport const Add = function(props) {\n    const [isActive, setIsActive] = useState(false)\n\n    if (!isActive) {\n        return (\n            <div className={`Add ${props.source}`}>\n                <button onClick={() => setIsActive(true)}>\n                    &#43; Add another {props.source}\n                </button>\n            </div>\n        )\n    } else {\n        if (props.source === 'list') {\n            return (\n                <div className=\"addList\">\n                    <form onSubmit={\n                        (event) => {\n                            event.preventDefault();\n                            const value = event.target[0].value\n                            props.add(value)\n                            setIsActive(false)\n                            }}>\n                        <input type=\"text\" placeholder=\"Enter list title...\" autoFocus='true'></input>\n                        <button type=\"submit\">Add</button>\n                        <button className=\"cancel\" onClick={() => setIsActive(false)}>\n                            <img src={cancel} alt=\"cancel icon\"></img>\n                        </button>\n                    </form>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"addCard\">\n                    <form onSubmit={\n                        (event) => {\n                            event.preventDefault();\n                            const value = event.target[0].value\n                            props.add(value)\n                            setIsActive(false)\n                            }}>\n                        <textarea placeholder=\"Enter a title for this card...\" autoFocus={true}></textarea>\n                        <button type=\"submit\">Add</button>\n                        <button className=\"cancel\" onClick={() => setIsActive(false)}>\n                            <img src={cancel} alt=\"cancel icon\"></img>\n                        </button>\n                    </form>\n                </div>\n            )\n        }\n    }\n}","import { useState, useEffect } from 'react'\nimport { Card } from './Card'\nimport { api } from '../API/api'\nimport { Delete } from './Delete'\nimport { Add } from './Add'\nimport \"./List.css\"\n\nexport const List = function(props) {\n    const [isLoading, setIsLoading] = useState(true)\n    const [cards, setCards] = useState([])\n    const remote = api()\n    \n    const initCards = async function(listId) {\n        if (!listId) {\n            return;\n        }\n        let response = await remote.getCardsByListId(listId);\n        if (response === 'no cards in this list') {\n            setCards([])\n            setIsLoading(false)\n        } else if (response) {\n            setCards(response)\n            setIsLoading(false)\n        } else {\n            console.log('somthing went wrong')\n        }\n    };\n\n    const refreshWithNewCard = async function(input) { \n        const newCard = {\n            title: input,\n            description: \"\"\n        }\n        let addedCard = await remote.addCard(newCard);\n        if (addedCard) {\n            remote.updateList(props.listId, addedCard.uid)\n            setCards([...cards, addedCard]) \n        } else {\n            console.log('error adding new card')\n        }\n    }\n\n    const refreshWithUpdatedCard = async function(cardId, key, value) {\n        let updatedCard = await remote.updateCard(cardId, key, value);\n        if (updatedCard) {\n            const cardsCopy = cards.slice();\n            const isCard = card => card.uid === cardId;\n            const indexOfMatch = cardsCopy.findIndex(isCard);\n            switch (key) {\n                case 'title':\n                    cardsCopy[indexOfMatch].title = value;\n                    break;\n                case 'description':\n                    cardsCopy[indexOfMatch].description = value;\n                    break;\n                default: \n                    console.log('no such key');\n            }\n            setCards(cardsCopy)\n        } else {\n            console.log('error updating card')\n        }\n    }\n\n    const deleteCard = async function(cardId) {\n        let response = await remote.deleteCard(cardId);\n        if (response === undefined) {\n            remote.removeFromList(props.listId, cardId)\n            const cardsCopy = cards.slice();\n            const isCard = (card) => card.uid === cardId;\n            const indexOfMatch = cardsCopy.findIndex(isCard);\n            cardsCopy.splice(indexOfMatch, 1)\n            setCards(cardsCopy)\n        } else {\n            console.log('there was an error deleting the card')\n        }\n    }\n    \n    const cardDisplay = cards.map((card) =>\n        <div className=\"cardContainer\" key={card.uid}>\n            <Card \n                deleteCard={deleteCard}\n                cardId={card.uid}\n                title={card.title}\n                description={card.description}\n                parentList={props.name}\n                update={refreshWithUpdatedCard}\n            />\n        </div>\n    );\n    \n    useEffect(() => {\n        initCards(props.listId);\n    },[])\n\n    if (isLoading) {\n        return (\n            <div>please hold!</div>\n        )\n    } else {\n        return (\n            <div className=\"List\">\n                <div className=\"listName\">\n                    {props.name}\n                    <Delete \n                        uid={props.listId}\n                        delete={props.deleteList}\n                    />\n                </div>\n                {cardDisplay}\n                <Add \n                    source=\"card\"\n                    add={refreshWithNewCard}\n                />\n            </div>\n        )\n    }\n}","import { useState, useEffect } from \"react\"\nimport { useRouteMatch } from \"react-router-dom\"\nimport { api } from \"../API/api\"\nimport { List } from \"../Components/List\"\nimport { Navigation } from \"../Components/Navigation\"\nimport { Add } from \"../Components/Add\"\nimport close from \"../icons/cancel-icon.svg\"\nimport \"./BoardView.css\"\nimport \"./BackgroundSettings.css\"\n\nexport const BoardView = function(props) {\n    const [isLoading, setIsLoading] = useState(true)\n    const [lists, setLists] = useState([])\n    const [settings, setSettings] = useState('default')\n    const [menuIsVisible, setMenuIsVisible] = useState(false)\n    const remote = api()\n    const match = useRouteMatch();\n    \n    const initLists = async function(boardId) {\n        if (!boardId) {\n            return;\n        }\n        let boardResponse = await remote.getBoard(boardId);\n        if (boardResponse) {\n            setSettings(boardResponse.background)\n        } else {\n            console.log('board not found')\n        }\n        let listsResponse = await remote.getListsByBoardId(boardId);\n        if (listsResponse) {\n            setLists(listsResponse)\n            setIsLoading(false)\n        } else {\n            console.log('lists not found')\n        }\n    };\n\n    const refreshLists = async function(input) { \n        const newList = {\n            name: input,\n            cardIds: null\n        }\n        let addedList = await remote.addList(newList);\n        if (addedList) {\n            remote.updateBoard(match.params.boardId, 'listIds', addedList.uid)\n            setLists([...lists, addedList]) \n        } else {\n            console.log('error adding new list')\n        }\n    }\n\n    const refreshSettings = async function(selection) {\n        let response = await remote.updateBoard(match.params.boardId, 'background', selection);\n        if (response) {\n            setSettings(selection);\n        } else {\n            console.log('error updating settings')\n        }\n    }\n\n    const deleteList = async function(listId) {\n        let response = await remote.deleteList(listId);\n        if (response === undefined) {\n            remote.removeFromBoard(match.params.boardId, listId)\n            const copyOfLists = lists.slice();\n            const isList = (list) => list.uid === listId;\n            const indexOfMatch = copyOfLists.findIndex(isList);\n            copyOfLists.splice(indexOfMatch, 1)\n            setLists(copyOfLists)\n        } else {\n            console.log('there was an error deleting the list')\n        }\n    }\n    \n    const listDisplay = lists.map((list) =>\n        <div key={list.uid}>\n            <List \n                deleteList={deleteList}\n                listId={list.uid}\n                name={list.name}\n            />\n        </div>\n    );\n    \n    const menu = function(isVisible) {\n        if (isVisible) {\n            return (\n                <div className=\"settingsMenu\">\n                    <div className=\"sectionHeader\">\n                        <h4>Change Background</h4>\n                        <button className=\"close\" onClick={() => setMenuIsVisible(false)}>\n                            <img src={close} alt=\"close icon\"></img>\n                        </button>\n                    </div>\n                    <div className=\"options\">\n                        <button className=\"menuOption orange\" onClick={() => refreshSettings('orange')}></button>\n                        <button className=\"menuOption purple\" onClick={() => refreshSettings('purple')}></button>\n                        <button className=\"menuOption green\" onClick={() => refreshSettings('green')}></button>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <button className=\"settingsMenuControl\" onClick={() => setMenuIsVisible(true)}>Show Menu</button>\n            );\n        }\n    }\n\n    useEffect(() => {\n        initLists(match.params.boardId);\n        let title = `${match.params.boardName} | Ello`;\n        document.title = title;\n    },[])\n\n    if (isLoading) {\n        return (\n            <div>\n                <Navigation \n                    background={settings} />\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navigation \n                    background={settings} />\n                <div className={`boardContainer ${settings}`}>\n                    <div className=\"boardDetailBar\">\n                        <h1>{match.params.boardName}</h1>\n                        {menu(menuIsVisible)}\n                    </div>\n                    <div className=\"listsContainer\">\n                        {listDisplay}\n                        <Add \n                            source=\"list\"\n                            add={refreshLists}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","export const NoMatch = function() {\n    return (\n        <div>\n            oops...something went wrong :(\n        </div>\n    )\n}","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { useContext, useState } from 'react'\nimport { LoginView } from \"./Views/LoginView\"\nimport { DashboardView } from \"./Views/DashboardView\"\nimport { api } from './API/api'\nimport './App.css';\nimport { UserContext } from './Models/UserContext';\nimport { BoardView } from './Views/BoardView'\nimport { NoMatch } from './Views/NoMatch'\n\nexport function App() {\n  const remote = api();\n  const userDefaults = useContext(UserContext)\n  const [user, setUser] = useState(userDefaults);\n\n  const checkUserCredentials = async function(email, password) {\n    let response = await remote.authenticateAndGetUser(email, password);\n    console.log('auth response is ', response)\n    if (response) {\n      setUser({\n        currentUser: response,\n        isLoggedIn: true,\n        setLogOut: (isLoggedIn) => {\n          if (isLoggedIn) {\n            setUser(userDefaults)\n          };\n        }\n      });\n      console.log('the state variable user is ', user)\n    } else {\n      console.log(`try again`)\n    }\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {user.isLoggedIn ? <Redirect to={`/${user.currentUser.email}/boards`} /> :\n            <LoginView checkUserCredentials={checkUserCredentials} />}\n          </Route>\n          <Route exact path=\"/login\">\n            {user.isLoggedIn ? <Redirect to={`/${user.currentUser.email}/boards`} /> :\n            <LoginView checkUserCredentials={checkUserCredentials} />}\n          </Route>\n          <Route exact path=\"/:email/boards\">\n            {user.isLoggedIn ? <DashboardView /> :\n            <Redirect to=\"/login\" />}\n          </Route>\n          <Route exact path=\"/:boardId/:boardName\">\n            {user.isLoggedIn ? <BoardView /> :\n            <Redirect to=\"/login\" />}\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </ Router>\n    </div>\n    </UserContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}